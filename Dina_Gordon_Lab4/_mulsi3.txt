
Unsigned:
__mulsi3(unsigned, unsigned):
        mv      a5,a0		# move a0 to a5, will be returned
        li      a0,0		# a0 = sum = 0
        beq     a1,zero,.L5	# if b==0 then it will end, if not go to .L5
.L4:
        andi    a4,a1,1		# a4 = b & 1
        srai    a1,a1,1		# a1 = b = b >> 1
        beq     a4,zero,.L3	# if(b & 1) go to .L3
        add     a0,a0,a5	# a0 = sum += a
.L3:
        slli    a5,a5,1		# a5 a = a << 1
        bne     a1,zero,.L4	# if b != 0 then continue until b == 0 that ends it, go to .L4
        ret			# return value in a0
.L5:
        ret			# return value in a0


Signed:
__mulsi3(int, int):
        mv      a5,a0		# move a0 to a5, will be returned
        blt     a1,zero,.L14	# if (b < 0) then go to .L14
        li      a0,0		# a0 = sum = 0
        beq     a1,zero,.L1	# if b==0 then it will end, if not go to .L1
.L3:
        li      a0,0
.L6:
        andi    a4,a1,1		# b & 1
        srai    a1,a1,1		# a1 = b = b >> 1
        beq     a4,zero,.L5	# if if(b & 1) go to .L5
        add     a0,a0,a5	# a0 = sum = sum + a
.L5:
        slli    a5,a5,1		# a5 = a = a << 1
        bne     a1,zero,.L6	# while(b != 0) go to .L6
.L1:
        ret			# return value in a0
.L14:
        neg     a1,a1		# turns 'a' negative
        neg     a5,a0		# turns 'b' negative
        j       .L3		# jumps to the while loop 


Total Clock Cycles: 310