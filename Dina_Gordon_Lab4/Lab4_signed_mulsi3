.data
.str0:	.asciz "First number: "
.str1:	.asciz "Second number: "
.str2:	.asciz "result = "
.str3:	.asciz "\n"
.text
main:
	la a0, .str0	# load address of .str0 into a0
	li a7, 4	# system call code for printing string = 4
	ecall		# print out .str0
	
	li a7, 5	# can read int due to 5
	ecall		# reads user input int and puts it into a0
	mv s0, a0	# move a0 to s0
	
	la a0, .str1	# load address of .str1 into a0
	li a7, 4	# system call code for printing string = 4
	ecall		# print out .str1
	
	li a7, 5	# can read int due to 5
	ecall		# reads user input int and puts it into a0 
	mv s1, a0	# move a0 to s1
	
	la a0, .str2	# load address of .str2 into a0
	li a7, 4	# system call code for printing string = 4
	ecall		# print out .str2
	
	mv a0, s0	# move s0 (first number inputted) to a0
	mv a1, s1	# move s1 (second number inputted) to a1
	call __mulsi3	# does multiplication and returns result
	
	li a7, 1	# system call code for printing ints = 1
	ecall		# prints out result
	
	la a0, .str3 	# load address of .str3 into a0
	li a7, 4 	# system call code for printing string = 4
	ecall 		# print out .str3
	
	mv a0, zero 	# move exit code to a0
	li a7, 93 	# system call code for exiting = 93
	ecall 		# exits the program 
	
__mulsi3:
        mv      a5,a0		# move a0 to a5, will be returned
        blt     a1,zero,.L14	# if (b < 0) then go to .L14
        li      a0,0		# a0 = sum = 0
        beq     a1,zero,.L1	# if b==0 then it will end, if not go to .L1
.L3:
        li      a0,0
.L6:
        andi    a4,a1,1		# b & 1
        srai    a1,a1,1		# a1 = b = b >> 1
        beq     a4,zero,.L5	# if if(b & 1) go to .L5
        add     a0,a0,a5	# a0 = sum = sum + a
.L5:
        slli    a5,a5,1		# a5 = a = a << 1
        bne     a1,zero,.L6	# while(b != 0) go to .L6
.L1:
        ret			# return value in a0
.L14:
        neg     a1,a1		# turns 'a' negative
        neg     a5,a0		# turns 'b' negative
        j       .L3		# jumps to the while loop 